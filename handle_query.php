<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    $pageTitle = "Login Required";
    ob_start();
    echo <<< _MESSAGE
    <div class="login-warning">
        <h2>‚ùå Access Denied</h2>
        <p>Please log in to perform a search.</p>
        <p><a href="login_user.php" class="btn">Log in</a> or <a href="index.php" class="btn"> Return Home</a></p>
    </div>
    _MESSAGE;
    $pageContent = ob_get_clean();
    include './features/base_layout.php';
    exit;
}

require_once 'db/db_connection.php';
$user_id = $_SESSION['user_id'] ?? null;

// Collect and validate inputs
$protein = $_POST['protein'];
$taxon = $_POST['taxon'];
$limit = $_POST['limit'] ?? 10;
$min_len = isset($_POST['use_length_filter']) ? (int)$_POST['min_len'] : 0;
$max_len = isset($_POST['use_length_filter']) && $_POST['max_len'] !== '' ? (int)$_POST['max_len'] : 100000;

if ($min_len > $max_len) {
    die("Error: Minimum length cannot be greater than maximum length.");
}

$run_id = uniqid("run_");

// Run python search script
$cmd = escapeshellcmd("python3 scripts/new_get_sequences.py \"$protein\" \"$taxon\" $limit $min_len $max_len $run_id");
$output = shell_exec($cmd);
// echo "<h3>Python Output:</h3><pre>$output</pre>";

// Parse result to CSV
$csv_path = "scripts/output/$run_id/sequences.csv";
if (!file_exists($csv_path)) {
    die("Error: Sequence CSV not found.");
}

$csv_data = array_map('str_getcsv', file($csv_path));
array_shift($csv_data); // Remove header

// Store query in database
$query_sql = "INSERT INTO Queries (search_id, user_id, protein_family, taxon, min_len, max_len, no_of_sequences)
              VALUES (?, ?, ?, ?, ?, ?, ?)";
$stmt = $pdo->prepare($query_sql);
$stmt->execute([$run_id, $user_id, $protein, $taxon, $min_len, $max_len, count($csv_data)]);

// Store sequences in database
$seq_sql = "INSERT INTO Sequences (refseq_id, search_id, species, sequence) VALUES (?, ?, ?, ?)";
$seq_stmt = $pdo->prepare($seq_sql);
foreach ($csv_data as $row) {
    [$refseq_id, $species, $sequence, $description] = $row;
    $seq_stmt->execute([$refseq_id, $run_id, $species, $sequence]);
}

// Prepare page content
ob_start();
echo "<div class='content-container'>";
echo "<h1>‚úÖ Protein Search Complete</h1>";
echo "<p>Here are the results for your search on <strong>$protein</strong> proteins in <strong>$taxon</strong>.</p>";

echo "<h2>Sequences Retrieved</h2>";
echo "<p><strong>Total:</strong> " . count($csv_data) . "</p>";
echo "<table border='1' cellpadding='6'>
<tr><th>RefSeq ID</th><th>Species</th><th>Length</th><th>Description</th></tr>";
foreach ($csv_data as $row) {
    [$refseq_id, $species, $sequence, $description] = $row;
    $length = strlen($sequence);
    echo "<tr>
        <td>$refseq_id</td>
        <td>$species</td>
        <td>$length</td>
        <td>$description</td>
    </tr>";
}
echo "</table>";
echo "<p><a href='scripts/output/$run_id/sequences.fasta' download>‚¨áÔ∏è Download FASTA</a></p>";

// Run ClustalO
echo "<h2>Clustal Omega Outputs</h2>";
$input_fasta = "scripts/output/$run_id/sequences.fasta";
$alignment_out = "scripts/output/$run_id/alignment.aln";
$distmat_out = "scripts/output/$run_id/identity_matrix.txt";
$tree_out = "scripts/output/$run_id/guide_tree.dnd";

$clustalo_cmd = escapeshellcmd("bash scripts/run_clustalo.sh \"$input_fasta\" \"$alignment_out\" \"$distmat_out\" \"$tree_out\"");
$clustalo_output = shell_exec($clustalo_cmd);

echo "<pre>$clustalo_output</pre>";

// Store analysis outpus in database
$insert_analysis = $pdo->prepare("INSERT INTO Analyses (search_id, type, result_path, label, file_type) VALUES (?, ?, ?, ?, ?)");

// Helper to do it in one line for later
function add_analysis($pdo, $run_id, $type, $path, $label)
{
    $ext = pathinfo($path, PATHINFO_EXTENSION);
    global $insert_analysis;
    $insert_analysis->execute([$run_id, $type, $path, $label, $ext]);
}

// Save each result into the DB
if (file_exists($alignment_out)) {
    add_analysis($pdo, $run_id, 'clustalo', $alignment_out, 'ClustalO alignment file');
}
if (file_exists($distmat_out)) {
    add_analysis($pdo, $run_id, 'clustalo', $distmat_out, 'Sequence identity matrix');
}
if (file_exists($tree_out)) {
    add_analysis($pdo, $run_id, 'clustalo', $tree_out, 'ClustalO guide tree (Newick format)');
}

echo "<h3>ClustalO Guide Tree</h3>";
echo "<p>This is a <strong>guide tree</strong> based on sequence similarity generated by Clustal Omega. It provides a visual approximation of sequence relationships, but it's not a true phylogenetic tree.</p>";
echo '<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js" integrity="sha512-tBzZQxySO5q5lqwLWfu8Q+o4VkTcRGOeQGVQ0ueJga4A1RKuzmAu5HXDOXLEjpbKyV7ow9ympVoa6wZLEzRzDg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>';
echo "<script src='assets/js/jsphylosvg-min.js'></script>";
echo "<div id='phylo_tree' style='width: 100%; height: 600px; border: 1px solid #ccc; padding: 10px; margin-bottom: 20px;'></div>";

if (file_exists($tree_out)) {
    $tree_data = trim(preg_replace('/\s+/', '', file_get_contents($tree_out)));
    $escaped_tree = htmlspecialchars($tree_data, ENT_QUOTES);
    echo "
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var newick = '$escaped_tree';
            new Smits.PhyloCanvas(
                newick,
                'phylo_tree',
                800,
                600,
                'rectangular'
            );
        });
    </script>";
} else {
    echo "<p style='color:red;'>No guide tree file found at $tree_out</p>";
}

// Plotcon analysis
echo "<h2>üìà Plotcon - Conservation Plot</h2>";
$plotcon_out_base = "scripts/output/$run_id/conservation";
$plotcon_img = $plotcon_out_base . ".1.png"; // This is what plotcon generates by default

$plotcon_cmd = escapeshellcmd("bash scripts/run_plotcon.sh \"$alignment_out\" \"$plotcon_out_base\"");
$plotcon_output = shell_exec($plotcon_cmd);

// echo "<h3>Plotcon Output:</h3><pre>$plotcon_output</pre>";

// If the image was generated successfully
if (file_exists($plotcon_img)) {
    // Save to database
    add_analysis($pdo, $run_id, 'plotcon', $plotcon_img, 'Conservation plot (plotcon)');

    // Display image on page
    echo "<h3>Conservation Plot</h3>";
    echo "<img src='$plotcon_img' style='max-width: 100%; border: 1px solid #ccc; padding: 10px;'>";
    echo "<p><a href='$plotcon_img' download>‚¨áÔ∏è Download Conservation Plot</a></p>";
} else {
    echo "<p style='color:red;'>Plotcon image not found at: $plotcon_img</p>";
}

// Identity Matrix Plot
$identity_img = "scripts/output/$run_id/identity_matrix.png";
$cmd = escapeshellcmd("python3 scripts/plot_identity_matrix_simple.py \"$run_id\" \"$protein\" \"$taxon\" " . count($csv_data));
$plot_output = shell_exec($cmd);

// Add to database
if (file_exists($identity_img)) {
    add_analysis($pdo, $run_id, 'identity_matrix', $identity_img, 'Sequence Identity Matrix (plot)');
    echo "<h3>Identity Matrix for each sequence</h3>";
    echo "<img src='$identity_img' style='max-width: 100%; border: 1px solid #ccc; padding: 10px;'>";
    echo "<p><a href='$identity_img' download>‚¨áÔ∏è Download Identity Matrix image</a></p>";
} else {
    echo "<p style='color:red;'>Identity matrix plot not found at $identity_img</p>";
}

// Run patmatmotifs
echo "<h2>Motif Analysis</h2>";
$motif_script = escapeshellcmd("bash scripts/new_run_patmatmotifs.sh \"$input_fasta\" \"$run_id\"");
shell_exec($motif_script);
$motif_tsv = "scripts/output/$run_id/motif_results.tsv";

if (file_exists($motif_tsv)) {
    $stmt = $pdo->prepare("SELECT id, refseq_id FROM Sequences WHERE search_id = ?");
    $stmt->execute([$run_id]);
    $map = [];
    foreach ($stmt->fetchAll(PDO::FETCH_ASSOC) as $row) {
        $map[$row['refseq_id']] = $row['id'];
    }

    $insert_motif = $pdo->prepare("INSERT INTO Motifs (search_id, sequence_id, prosite_id, motif_name, start_pos, end_pos) VALUES (?, ?, ?, ?, ?, ?)");
    $inserted = 0;

    $fh = fopen($motif_tsv, 'r');
    while (($line = fgetcsv($fh, 0, "\t")) !== false) {
        if (count($line) < 5) continue;
        [$refseq, $prosite, $name, $start, $end] = $line;
        $refseq = trim($refseq);
        if (isset($map[$refseq])) {
            $insert_motif->execute([$run_id, $map[$refseq], $prosite, $name, $start, $end]);
            $inserted++;
        }
    }
    fclose($fh);
    echo "<p>‚úÖ Found $inserted motif hits for sequences.</p>";
    add_analysis($pdo, $run_id, 'motif', $motif_tsv, 'Motif results TSV');
    echo "<p><a href='$motif_tsv' download>‚¨áÔ∏è Download Motif TSV</a></p>";
}

// Motif Frequency Plot
$freq_sql = "SELECT motif_name, COUNT(*) as count FROM Motifs WHERE search_id = ? GROUP BY motif_name";
$stmt = $pdo->prepare($freq_sql);
$stmt->execute([$run_id]);
$motif_freq = $stmt->fetchAll(PDO::FETCH_ASSOC);
$freq_csv = "scripts/output/$run_id/motif_freq.csv";
$fp = fopen($freq_csv, 'w');
fputcsv($fp, ['motif_name', 'count']);
foreach ($motif_freq as $row) fputcsv($fp, [$row['motif_name'], $row['count']]);
fclose($fp);
$plot_cmd = escapeshellcmd("python3 scripts/plot_motif_freq_from_csv.py \"$run_id\" \"$freq_csv\" \"$protein\" \"$taxon\"");
shell_exec($plot_cmd);
$plot_path = "scripts/output/$run_id/motif_frequency.png";
if (file_exists($plot_path)) {
    add_analysis($pdo, $run_id, 'motif', $plot_path, 'Motif frequency plot');
    echo "<h2>üìä Motif Frequency Bar Chart</h2>";
    echo "<img src='$plot_path' style='max-width:100%; height:auto; border:1px solid #ccc; padding:10px;'>";
    echo "<p><a href='$plot_path' download>‚¨áÔ∏è Download Frequency Bar chart</a></p>";
}

// Overall analyses table
echo "<h2>üìÇ Analysis Files</h2>";

$analysis_sql = "SELECT type, label, result_path, file_type, created_at FROM Analyses WHERE search_id = ?";
$stmt = $pdo->prepare($analysis_sql);
$stmt->execute([$run_id]);
$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);

if ($rows) {
    echo "<table border='1' cellpadding='6'>
    <tr><th>Type</th><th>Description</th><th>Download</th><th>Created</th></tr>";
    foreach ($rows as $r) {
        $filename = basename($r['result_path']);
        echo "<tr>
            <td>{$r['type']}</td>
            <td>{$r['label']}</td>
            <td><a href='{$r['result_path']}' download='$filename'>Download</a></td>
            <td>{$r['created_at']}</td>
        </tr>";
    }
    echo "</table>";
} else {
    echo "<p>No analysis files found.</p>";
}

echo <<< _EXTRAS
<div class='external-links'>
    <h2>üîó Next Steps & Other Useful Tools</h2>
    <ul>
        <li><a href="https://www.uniprot.org/" target="_blank">UniProt</a> ‚Äî Explore more detailed protein information</li>
        <li><a href="https://prosite.expasy.org/" target="_blank">PROSITE</a> ‚Äî Investigate motifs and functional sites</li>
        <li><a href="https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE=Proteins" target="_blank">NCBI BLASTP</a> ‚Äî Query protein to find similar proteins</li>
    </ul>
</div>
_EXTRAS;

echo "<p style='margin-top: 30px;'><a href='index.php'>‚¨ÖÔ∏è Back to Homepage</a></p>";
echo "</div>";
$pageContent = ob_get_clean();
$pageTitle = "Search Results for $protein ($taxon)";
include './features/base_layout.php';
?>